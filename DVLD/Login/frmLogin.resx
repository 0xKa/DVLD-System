<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADU
        DAAAAk1TRnQBSQFMAgEBAgEAARgBAAEYAQABJgEAASYBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAGY
        AwABJgMAAQEBAAEgBQABQAFa/wD/AP8A/wDuAAMQARUDIgExAyIBMQMiATEDIgExAyIBMQMiATEDIgEx
        AyIBMQMiATEDIgExAyIBMQMiATEDIgExAyIBMQMiATEDIgExAyIBMQMiATEDIgExAyIBMQMiATEDIgEx
        AyIBMQMiATEDHwEsAwIBAywAAxABFQMiATEDIgExAyIBMQMiATEDIgExAyIBMQMiATEDIgExAyIBMQMi
        ATEDIgExAyIBMQMiATEDIgExAyIBMQMiATEDIgExAyIBMQMiATEDIgExAyIBMQMiATEDIgExAyIBMQMf
        ASwDAgED/wBVAAMRARYD5wH5bP8DcQG6BAEcAAMRARYD5wH5bP8DcgG8BAH/AEkAAwUBBgT/A9YB8gMw
        AUoDIwEyAyMBMgMjATIDIwEyAyMBMgMjATIDIwEyAyMBMgMjATIDIwEyAyMBMgMjATIDIwEyAyMBMgMj
        ATIDIwEyAyMBMgMjATIDIwEyAyMBMgMjATIDIwEyAyMBMgMjATIDJAE0A0kBfwT/A3IBuxgAAwUBBnj/
        A3QBvf8ASQADSwGEA/kB/gMPARRsAANJAX8E/wMCAQMUAANLAYR8/wMCAQP/AEUAA2sBswPXAfNwAAMk
        ATQE/wMeASsUAANrAbN8/wMeASv/AEUAA20BtgPWAfJwAAMiATEE/wMhAS8UAANtAbZ8/wMhAS//AEUA
        A20BtgPWAfJwAAMiATEE/wMhAS8UAANtAbZ8/wMhAS//AEUAA20BtgPWAfJwAAMiATEE/wMhAS8UAANt
        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
        AfID1gHyA9YB8gPWAfID1gHyA9YB8gPWAfID1wHzA/kB/gT/AxEBFhwAA1UBlHT/AxEBFv8AUQADJAE0
        A14BpANvAbcDbwG3A28BtwNvAbcDbwG3A28BtwNvAbcDbwG3A28BtwNvAbcDbwG3A28BtwNvAbcDbwG3
        A28BtwNvAbcDbwG3A28BtwNvAbcDbwG3A28BtwNvAbcDbwG3A28BtwNrAbQDTAGFAwUBBiQAAyQBNQNe
        AaQDbwG3A28BtwNvAbcDbwG3A28BtwNvAbcDbwG3A28BtwNvAbcDbwG3A28BtwNvAbcDbwG3A28BtwNv
        AbcDbwG3A28BtwNvAbcDbwG3A28BtwNvAbcDbwG3A28BtwNvAbcDawG0A0wBhQMFAQb/AP8A/wD/AP8A
        /wD/AP8AaAABQgFNAT4HAAE+AwABKAMAAZgDAAEmAwABAQEAAQEFAAH4AQIWAAP/AQAJ/wHwCgAJ/wHw
        CgAB/AMAAX8B8AIAAQEB8AoAAfADAAEfAcADAAFwCgAB4AMAAR8BgAMAAXAKAAHjA/8BjwGAAwABMAoA
        AecD/wGPAYADAAEwCgAB5wP/AY8BgAMAATAKAAHnA/8BjwGAAwABMAoAAecD/wGPAYADAAEwCgAB5wP/
        AY8BgAMAATAKAAHnAfMB/wGfAY8BgAMAATAKAAHnAfEB/wEfAY8BgAEAAQEBAAEwCgAB5wHwAf4BPwGP
        AYABAAECAQABMAoAAecB+AF8AX8BjwGAAQABBAEAATAKAAHnAfwBOAH/AY8BgAEAAQgBAAEwCgAB5wH+
        AREB/wGPAYABAQEQAQABMAoAAecB/wEDAf8BjwGAAQABIAEAATAKAAHnAf8BxwH/AY8BgAEAAUABAAEw
        CgAB5wH/AYMB/wGPAYABAAGAAQABMAoAAecB/wERAf8BjwGAAQEBEAEAATAKAAHnAf4BMAH/AY8BgAEC
        AgABMAoAAecB/AF4AX8BjwGAAQQCAAEwCgAB5wH4AfwBPwGPAYABCAIAATAKAAHnAfEB/gEfAY8BgAEQ
        AgABMAoAAecB8wH/AR8BjwGAAwABMAoAAecD/wGPAYADAAEwCgAB5wP/AY8BgAMAATAKAAHnA/8BjwGA
        AwABMAoAAecD/wGPAYADAAEwCgAB5wP/AY8BgAMAATAKAAHnA/8BjwGAAwABMAoAAeMD/wEfAYADAAFw
        CgAB8AMAAR8BwAMAAXAKAAH4AwABPwHgAwAB8AoACf8B8AoACf8B8AoACf8B8AoACw==
</value>
  </data>
</root>